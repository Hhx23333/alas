{{ MapData.temp['base_import'] }}
from module.map.map_base import CampaignMap
from module.map.map_grids import SelectedGrids, RoadGrids
from module.logger import logger
{%- if MapData.temp['x1_flag'] %}
from {{ MapData.chap | lower }}1 import Config as ConfigBase
{%- endif %}


MAP = CampaignMap('{{ MapData.chapter_name }}')
MAP.shape = '{{ MapData.temp['shape'] }}'
MAP.camera_data = {{ MapData.temp['camera_data'] }}
MAP.camera_data_spawn_point = {{ MapData.temp['camera_sp'] }}
{%- if MapData.MAP_HAS_PORTAL %}
MAP.portal_data = {{ MapData.portal }}
{%- endif %}

MAP.map_data = """
{% for line in MapData.temp['map_lines'] -%}
{{ line }}
{% endfor -%}
"""

{%- if MapData.map_data_loop is not none %}

MAP.map_data_loop = """
{% for line in MapData.temp['data_lines'] -%}
{{ line }}
{% endfor -%}
"""
{%- endif %}

MAP.weight_data = """
{% for line in MapData.temp['weight_lines'] -%}
{{ line }}
{% endfor -%}
"""

{%- if MapData.MAP_HAS_LAND_BASED %}

MAP.land_based_data = {{MapData.land_based}}
{%- endif %}

MAP.spawn_data = [
{% for line in MapData.temp['spawn_lines'] -%}
{{ line }}
{% endfor -%}
]

{%- if MapData.spawn_data_loop %}

MAP.spawn_data_loop = [
{% for line in MapData.temp['battle_lines'] -%}
{{ line }}
{% endfor -%}
]
{%- endif %}

{% for line in MapData.temp['flatten_lines'] -%}
{{ line }}
{% endfor %}    = MAP.flatten()

{%- if MapData.temp['x1_flag'] %}


class Config(ConfigBase):
{%- else %}


class Config:
{%- endif %}
    # ===== Start of generated config =====
{%- if MapData.temp['siren_length'] %}
    MAP_SIREN_TEMPLATE = {{ MapData.MAP_SIREN_TEMPLATE }}
    MOVABLE_ENEMY_TURN = {{ MapData.temp['MOVABLE_ENEMY_TURN_tuple'] }}
    MAP_HAS_SIREN = True
    MAP_HAS_MOVABLE_ENEMY = {{ MapData.MAP_HAS_MOVABLE_ENEMY }}
{%- endif %}
    MAP_HAS_MAP_STORY = {{ MapData.MAP_HAS_MAP_STORY }}
    MAP_HAS_FLEET_STEP = {{ MapData.MAP_HAS_FLEET_STEP }}
    MAP_HAS_AMBUSH = {{ MapData.MAP_HAS_AMBUSH }}
    MAP_HAS_MYSTERY = {{ MapData.MAP_HAS_MYSTERY }}
{%- if MapData.MAP_HAS_PORTAL %}
    MAP_HAS_PORTAL = {{ MapData.MAP_HAS_PORTAL }}
{%- endif %}
{%- if MapData.MAP_HAS_LAND_BASED %}
    MAP_HAS_LAND_BASED = {{ MapData.MAP_HAS_LAND_BASED }}
{%- endif %}
{% for line in MapData.temp['star_lines'] -%}
{{ line }}
{% endfor %}    # ===== End of generated config =====


class Campaign(CampaignBase):
    MAP = MAP
    ENEMY_FILTER = '{{ MapData.temp['ENEMY_FILTER'] }}'

    def battle_0(self):
{%- if MapData.temp['siren_length'] %}
        if self.clear_siren():
            return True
{%- endif %}
        if self.clear_filter_enemy(self.ENEMY_FILTER, preserve={{ MapData.temp['preserve'] }}):
            return True

        return self.battle_default()

{%- set battle = MapData.temp['battle'] %}
{%- if battle >= 6 %}

    def battle_5(self):
{%- if MapData.temp['siren_length'] %}
        if self.clear_siren():
            return True
{%- endif %}
        if self.clear_filter_enemy(self.ENEMY_FILTER, preserve=0):
            return True

        return self.battle_default()
{%- endif %}

    def battle_{{ battle }}(self):
{%- if battle >= 5 %}
        return self.fleet_boss.clear_boss()
{%- else %}
        return self.clear_boss()
{% endif %}